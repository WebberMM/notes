#+TITLE: Modal Logic
#+AUTHOR: wugouzi

#+EXPORT_FILE_NAME: ../latex/ModalLogic/ModalLogic.tex
#+LATEX_HEADER: \input{../preamble.tex}
#+LATEX_HEADER: \graphicspath{{../images/ModalLogic}}

* Basic Concepts
** Modal Languages
   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   The *basic modal language* is defined using  a set of *proposition letters* \Phi
   whose elements are usually denoted \(p,q,r\) and so on, and a unary modal
   operator \(\lozenge\). The well-formed *formulas* \phi of the basic modal
   language are given by the rule
   \begin{equation*}
   \phi::=p\mid\bot\mid\neg\phi\mid\psi\vee\phi\mid\lozenge\phi
   \end{equation*}
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   A *modal similarity type* is a pair \(\tau=(O,\rho)\) where \(O\) is a non-empty
   set, and \rho is a function \(O\to\N\). The elements of \(O\) are called *modal
   operators*; we use \(\triangle\), \(\triangle_0,\triangle_1,\dots\) to denote
   elements of \(O\). The function \rho assigns to each operator \(\delta\in O\) a
   finite *arity*
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   A *modal language* \(ML(\tau,\Phi)\) is built up using a modal similarity type
   \(\tau=(O,\rho)\) and a set of proposition letters \Phi. The set \(Form(\tau,\Phi)\) of
   *modal formulas* over \tau and \Phi is given by the rule
   \begin{equation*}
   \phi:=p\mid\bot\mid\neg\phi\mid\phi_1\vee\phi_2\mid\triangle(\phi_1,\dots,\phi_{\rho(\triangle)})
   \end{equation*}
   where \(p\) ranges over elements of \Phi
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   For each \(\triangle\in O\) the *dual* \(\triangledown\) of \(\triangle\) is defined
   as \(\triangledown(\phi_1,\dots,\phi_n):=\neg\triangle(\neg\phi_1,\dots,\neg\phi_n)\)
   #+END_definition

   #+ATTR_LATEX: :options [The Basic Temporal Language]
   #+BEGIN_examplle
   The basic temporal language is built using a set of unary operators \(O=\{\la
   F\ra,\la P\ra\}\). The intended interpretation of a formula \(\la F\ra\phi\)
   is ' \phi will be true at some Future time' and the intended interpretation of
   \(\la P\ra\phi\) is ' \phi was true at some Past time.' This language is called
   the *basic temporal language*. Their duals are written as \(G\) and \(H\) ('it
   is Going to be the case' and 'it always Has been the case')

   Let's denote the converse of a relation \(R\) by \(R^\smallsmile\). We will
   call a frame of the form \((T,R,R^\smallsmile)\) a *bidirectional frame*, and a
   model built over such a frame a *bidirectional model*. From now on, we will
   only interpret basic temporal language in bidirectional models. That is, if
   \(\fM=(T,R,R^\smallsmile,V)\) is a bidirectional model then
   \begin{align*}
   \fM,t\Vdash F\phi \quad&\text{ iff }\quad
   \exists s(Rts\wedge \fM,s\Vdash\phi)\\
   \fM,t\Vdash P\phi \quad&\text{ iff }\quad
   \exists s(R^\smallsmile ts\wedge \fM,s\Vdash\phi)
   \end{align*}
   #+END_examplle

   #+ATTR_LATEX: :options [An Arrow Language]
   #+BEGIN_examplle
   The type \(\tau_\to\) of *arrow logic* is a similarity type with modal
   operators other than diamonds. The language of arrow logic is designed to
   talk about the objects in arrow structures. The well-formed formulas \phi are
   given by
   \begin{equation*}
   \phi:=p\mid\bot\mid\neg\phi\mid\phi\vee\psi\mid\phi\circ\psi\mid
   \otimes\phi\mid 1'
   \end{equation*}
   1' ('identity') is a nullary modality, the 'converse' operator \(\otimes\) is
   a diamond, and the 'composition' operator \(\circ\) is a dyadic operator.
   Possible readings of these operators are:
   \begin{alignat*}{3}
   &1'&&\text{identity}&&\text{'skip'}\\
   &\otimes\phi&&\text{converse}&&\text{'\(\phi\) conversely'}\\
   &\phi\circ\psi\quad&&\text{composition}\quad&&\text{'first \(\phi\), then \(\psi\)'}
   \end{alignat*}
   #+END_examplle
** Models and Frames
   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   A *frame* for the basic modal language is a pair \(\fF=(W,R)\) s.t.
   1. \(W\) is a non-empty set
   2. \(R\) is a binary relation on \(W\)


   A *model* for the basic modal language is a pair \(\fM=(\fF,V)\), where \(\fF\)
   is a frame for the basic modal language and \(V\) is a function assigning to
   each proposition letter \(p\) in \Phi a subset \(V(p)\) of \(W\). The function
   \(V\) is called a *valuation*. \(\fM\) is *based on* the frame \(\fF\)
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   Suppose \(w\) is a state in a model \(\fM=(W,R,V)\). Then \phi is *satisfied* in
   \(\fM\) at state \(w\) if
   \begin{align*}
   \fM,w\Vdash p&\quad\text{iff}\quad
   w\in V(p),\text{ where } p\in\Phi\\
   \fM,w\Vdash\bot&\quad\text{iff}\quad\text{never}\\
   \fM,w\Vdash\neg\phi&\quad\text{iff}\quad
   \text{not }\fM,w\Vdash\phi\\
   \fM,w\Vdash\phi\vee\psi&\quad\text{iff}\quad
   \fM,w\Vdash\phi\text{ or }\fM,w\Vdash\psi\\
   \fM,w\Vdash\lozenge\phi&\quad\text{iff}\quad
   \text{ for some }v\in W\text{ with }Rwv\text{ we have }\fM,v\Vdash\phi
   \end{align*}
   It follows that \(\fM,w\Vdash\Box\phi\) iff for all \(v\in W\) s.t.
   \(Rwv\), we have \(\fM,v\Vdash\phi\)
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   Let \tau be a modal similarity type. A *\(\tau\)-frame* is a tuple \(\fF\)
   consisting of the following ingredients
   1. a non-empty set \(W\)
   2. for each \(n\ge0\), and each \(n\)-ary modal operator \(\triangle\) in the
      similarity type \tau, an \((n+1)\)-ary relation \(R_{\triangle}\)
   #+END_definition

   \phi is *satisfied at a state \(w\)* in a model
   \(\fM=(W,\{R_{\triangle}\mid\triangle\in\tau\},V)\) when
   \(\rho(\triangle)\iffalse<\fi>0\) if
   \begin{align*}
   \fM,w\Vdash\triangle(\phi_1,\dots,\phi_n)\quad\text{iff}\quad&
   \text{for some }v_1,\dots,v_n\in W\text{ with } R_{\triangle} wv_1\dots v_n\\
   &\text{we have, for each }i,\fM,v_i\Vdash\phi_i
   \end{align*}

   When \(\rho(\triangle)=0\) we define
   \begin{equation*}
   \fM,w\Vdash\triangle \quad\text{ iff }\quad
   w\in R_{\triangle}
   \end{equation*}

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
  The set of all formulas that are valid in a class of frames \(\sfF\)is called
  the *logic* of \(\sfF\) (notation: \(\Lambda_{\sfF}\))
   #+END_definition

** General Frames
   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   Given an \((n+1)\)-ary relation \(R\) on a set \(W\), we define the following
   \(n\)-ary operation \(m_R\) on the power set \(\calp(W)\) of \(W\):
   \begin{equation*}
   m_R(X_1,\dots,X_n)=\{w\in W\mid Rww_1\dots w_n\text{ for some }
   w_1\in X_1,\dots,w_n\in X_n\}
   \end{equation*}
   #+END_definition

* Models
** Invariance Results
   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   Let \(\fM\) and \(\fM'\) be models of the same modal similarity type \tau, and
   let \(w\) and \(w'\) be states in \(\fM\) and \(\fM'\) respectively. The
   *\(\tau\)-theory* (or *\(\tau\)-type*) *of* \(w\) is the set of all
   \(\tau\)-formulas satisfied at \(w\): that is,
   \(\{\phi\mid\fM,w\Vdash\phi\}\). We say that \(w\) and \(w'\) are *(modally)
   equivalent* (\(w\leftrightsquigarrow w'\)) if they have the same \(\tau\)-theories

   The *\(\tau\)-theory* of the model \(\fM\) is the set of all \(\tau\)-formulas
   satisfied by all states in \(fM\); that is, \(\{\phi\mid\fM\Vdash\phi\}\)
   Models \(\fM\) and \(\fM'\) are called
   *(modally) equivalent* (\(\fM\leftrightsquigarrow\fM'\)) if their theories are identical
   #+END_definition

*** Disjoint Unions
*** Generated submodels
    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    Let \(\fM=(W,R,V)\) and \(\fM'=(W',R',V')\) be two models; we say that
    \(\fM'\) is a *submodel* of \(\fM\) if \(W'\subseteq W\), \(R'\) is the
    restriction of \(R\) to \(W'\), and \(V'\) is the restriction of \(V\) to
    \(\fM'\). We say that \(\fM'\) is a *generated submodel* of \(\fM\)
    (\(\fM'\rightarrowtail\fM\)) if \(\fM'\) is a submodel of \(\fM\) and for
    all points \(w\) the following closure condition holds
    \begin{equation*}
    \text{if }w\text{ is in }\fM'\text{ and }Rwv,\text{ then }v\text{ is in }\fM'
    \end{equation*}

    Let \(fM\) be a model, and \(X\) a subset of the domain of \(\fM\); the
    *submodel generated by* \(X\) is the smallest generated submodel of \(\fM\)
    whose domain contains \(X\). A *rooted* or *point generated* model is a model
    that is generated by a singleton set, the element of which is called the
    *root* of the frame
    #+END_definition

*** Morphism for modalities
    #+ATTR_LATEX: :options [Homomorphisms]
    #+BEGIN_definition
    Let \tau be a modal similarity type and let \(\fM\) and \(\fM'\) be
    \tau-models. By a *homomorphism* \(f:\fM\to\fM'\), we mean a function \(f:W\to
    W'\) satisfying
    1. For each proposition letter \(p\) and each element \(w\) from \(\fM\), if
       \(w\in V(p)\), then \(f(w)\in V'(p)\)
    2. For each \(n\ge0\) and each \(n\)-ary \(\triangle\in\tau\) and
       \((n+1)\)-tuple \(\bbar{w}\) from \(\fM\), if \((w_0,\dots,w_n)\in
       R_{\triangle}\), then \((f(w_0),\dots,f(w_n))\in R_{\triangle}'\) (the
       *homomorphic condition*)
    #+END_definition

    #+ATTR_LATEX: :options [Strong Homomorphisms, Embeddings and Isomorphisms]
    #+BEGIN_definition
    Let \tau be a modal similarity type and let \(\fM\) and \(\fM'\) be
    \tau-models. By a *strong homomorphism* \(f:\fM\to\fM'\), we mean a function \(f:W\to
    W'\) satisfying
    1. For each proposition letter \(p\) and each element \(w\) from \(\fM\) iff
       \(w\in V(p)\), then \(f(w)\in V'(p)\)
    2. For each \(n\ge0\) and each \(n\)-ary \(\triangle\in\tau\) and
       \((n+1)\)-tuple \(\bbar{w}\) from \(\fM\) iff \((w_0,\dots,w_n)\in
       R_{\triangle}\), iff \((f(w_0),\dots,f(w_n))\in R_{\triangle}'\) (the
       *strong homomorphic condition*)


    An *embedding* of \(\fM\) into \(\fM'\) is a strong homomorphism
    \(f:\fM\to\fM'\) which is injective. An *isomorphism* is a bijective strong homomorphism
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    Let \tau be a modal similarity type and let \(\fM\) and \(\fM'\) be
    \tau-models. Then the following holds
    1. for all elements \(w\) and \(w'\) of \(\fM\) and \(\fM'\), respectively,
       if there exists a surjective strong homomorphism \(f:\fM\to\fM'\) with
       \(f(w)=w'\), then \(w\) and \(w\) are modally equivalent
    2. If \(\fM\cong\fM'\), then \(\fM\leftrightsquigarrow\fM'\)
    #+END_proposition

    #+ATTR_LATEX: :options [Bounded Morphisms - the Basic Case]
    #+BEGIN_definition
    Let \(\fM\) and \(\fM'\) be models for the basic modal language. A mapping
    \(f:\fM=(W,R,V)\to\fM'=(W',R',V')\) is a *bounded morphsim* if it satisfies
    1. \(w\) and \(f(w)\) satisfy the same proposition letters
    2. \(f\) is a homomorphism w.r.t. the relation \(R\) (if \(Rwv\) then \(R'f(w)f(v)\))
    3. If \(R'f(w)v'\) then there exists \(v\) s.t. \(Rwv\) and \(f(v)=v'\) (the
       *back condition*)


    If there is a *surjective* bounded morphism from \(\fM\) to \(\fM'\), then we
    say that \(\fM'\) is a *bounded morphic image* of \(\fM\), and write
    \(\fM\twoheadrightarrow\fM'\)
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    Let \tau be a modal similarity type and let \(\fM\) and \(\fM'\) be
    \(\tau\)-models s.t. \(f:\fM\to\fM'\) is a bounded morphism. Then for each
    modal formula \phi, and each element \(w\) of \(\fM\) we have
    \(\fM,w\Vdash\phi\) iff \(\fM',f(w)\Vdash\phi\).
    #+END_proposition


    Let \tau be a modal similarity type containing only diamonds (thus if \(\fM\)
    is a \(\tau\)-model, it has the form \((W,R_1,\dots,V)\) where each \(R_i\)
    is a binary relation on \(W\)) . In this context we will call a
    \(\tau\)-model \(\fM\) *tree-like* if the structure \((W,\bigcup_i R_i,V)\) is
    a tree

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    label:prop2.15
    Assume that \tau is a modal similarity type containing only diamonds. Then for
    any rooted \(\tau\)-models \(\fM\) there exists a tree-like \(\tau\)-models
    \(\fM'\) s.t. \(\fM'\twoheadrightarrow\fM\). Hence any satisfiable
    \(\tau\)-formula is satisfiable in a tree-like model
    #+END_proposition

    #+BEGIN_proof
    Let \(w\) be the root of \(\fM\). Define the model \(\fM'\) as follows. Its
    domain \(W'\) consist of all finite sequences \((w,u_1,\dots,u_n)\) s.t.
    \(n\ge0\) and for some modal operators \(\la a_1\ra,\dots,\la
    a_n\ra\in\tau\) there is a path \(wR_{a_1}u_1\cdots R_{a_n}u_n\) in \(\fM\).
    Define \((w,u_1,\dots,u_n)R'_a(w,v_1,\dots,w_m)\) to hold if
    \(m=n+1,u_i=v_i\) for \(i=1,\dots,n\) and \(R_au_nv_m\) holds in \(\fM\).
    That is, \(R'_a\) relates two sequences iff the second is an extension of
    the first with a state from \(\fM\) that is a sucessor of the last element
    of the first sequence. Finally, \(V'\) is defined by putting
    \((w,u_1,\dots,u_n)\in V'(p)\) iff \(u_n\in V(p)\). The mapping
    \(f:(w,u_1,\dots,u_n)\mapsto u_n\) defines a surjective bounded morphism
    from \(\fM'\) to \(\fM\)
    #+END_proof




** Bisimulations
   #+ATTR_LATEX: :options [Bisimulation - the Basic Case]
   #+BEGIN_definition
   label:def2.16
   Let \(\fM=(W,R,V)\) and \(\fM=(W',R',V')\) be two models

   A non-empty binary relation \(Z\subseteq W\times W'\) is called a *bisimulation
   between* \(\fM\) and \(\fM'\) (notation: \(Z:\fM\leftrightarroweq\fM')\) if
   1. If \(wZw'\) then \(w\) and \(w'\) satisfy the same proposition letters
   2. If \(wZw'\) and \(Rwv\), then there exists \(v'\) (in \(\fM'\)) s.t.
      \(vZv'\) and \(R'w'v'\) (the *forth condition*)
   3. The converse of (2): if \(wZw'\) and \(R'w'v'\), then there exists \(v\)
      (in \(\fM\)) s.t. \(vZv'\) and \(Rwv\) (the *back condition*)


   When \(Z\) is a bisimulation linking two states \(w\) in \(\fM\) and \(w'\)
   in \(\fM'\) we say that \(w\) and \(w'\) are *bisimilar*, and we write
   \(Z:\fM,w\leftrightarroweq \fM',w'\). If there is a bisimulation, we sometimes
   write \(\fM,w\leftrightarroweq \fM',w'\) or \(w\leftrightarroweq w'\)
   #+END_definition

   #+ATTR_LATEX: :options [Bisimulation - the General Case]
   #+BEGIN_definition
   Let \tau be a modal similarity type, and let
   \(\fM=(W,R_{\triangle},V)_{\triangle\in\tau}\) and
   \(\fM'=(W',R_{\triangle}',V')_{\triangle\in\tau}\) be \(\tau\)-models. A
   non-empty binary relation \(Z\subseteq W\times W'\) is called a *bisimulation*
   between \(\fM\) and \(\fM'\) (\(Z:\fM\leftrightarroweq\fM'\)) if the above
   condition 1 is satisfied and
   2. [@2] If \(wZw'\) and \(R_{\triangle}wv_1\dots v_n\) then there are
      \(v_1',\dots,v_n'\in W'\) s.t. \(R'_{\triangle}w'v_1'\dots v_n'\) and for
      all \(i\) (\(1\le i\le n\)) \(v_iZv_i'\) (the *forth* condition)
   3. If \(wZw'\) and \(R'_{\triangle}w'v_1'\dots v_n'\) then there are
      \(v_1,\dots,v_n\in W\) s.t. \(R_{\triangle}wv_1\dots v_n\) and for
      all \(i\) (\(1\le i\le n\)) \(v_iZv_i'\) (the *back* condition)
   #+END_definition

   #+ATTR_LATEX: :options []
   #+BEGIN_proposition
   Let \tau be a modal similarity type, and let \(\fM,\fM'\) and \(\fM_i\) (\(i\in
   I\)) be \(\tau\)-models
   1. If \(\fM\cong\fM'\), then \(\fM\leftrightarroweq\fM'\)
   2. For every \(i\in I\), and every \(w\) in \(\fM_i\),
      \(\fM_i,w\leftrightarroweq\biguplus_i\fM_i,w\)
   3. If \(\fM'\rightarrowtail\fM\), then \(\fM',w\leftrightarroweq\fM,w\) for
      all \(w\) in \(\fM'\)
   4. If \(f:\fM\twoheadrightarrow\fM'\), then
      \(\fM,w\leftrightarroweq\fM',f(w)\) for all \(w\) in \(\fM\)
   #+END_proposition

   #+BEGIN_proof
   Suppose \(\fM=(W,R_{\triangle},V)_{\triangle\in\tau}\) and
   \(\fM'=(W',R_{\triangle}',V')_{\triangle\in\tau}\) 
   \(\fM_i\subseteq \biguplus_i\fM_i\)
   1. Suppose \(f:\fM\cong\fM'\), then we define \(wZw'\) iff \(w'=f(w)\) where
      \(w\in W,w'\in W'\). Bisimulation comes from the definition of the isomorphism
   2. Define the relation \(Z=\{(w,w)\mid
      w\in\fM_i\}\subseteq\fM_i\times\biguplus\fM_i\). The first condition comes
      from the invariance. The forth condition is obvious. For the back
      condition, if \(R_{\triangle}'w'v_1'\dots v_n'\) and \(w'\in W\), then
      \(v_1',\dots,v_n'\in W\) since each \(R_{\triangle,i}\) is disjoint and we
      have \(R_{\triangle,i}w'v_1'\dots v_n'\)
   3. Define the relation \(Z=\{(w,w)\mid w\in\fM'\}\subseteq\fM'\times\fM\).
      The first condition comes from the invariance. Forth condition is obvious.
      For the back condition, suppose \(wZw\) and \(R'_{\triangle}wv_1'\dots
      v_n'\), by the definition, \(v_1',\dots,v_n'\in W\) and
      \(R_{\triangle}wv_1'\dots v_n'\)
   4. Define \(Z=\{(w,f(w)\mid w\in W)\}\). The first condition comes from the
      definition. If \(wZw'\) and \(R_{\triangle}wv_1\dots v_n\), then
      \(R'_{\triangle}f(w)f(v_1)\dots f(v_n)\). If \(wZw'\) and
      \(R_{\triangle}'w'v_1'\dots v_n\), then there is \(v_1,\dots,v_n\) s.t.
      \(R_{\triangle}wv_1,\dots,v_n\) and \(f(v_i)=v_i'\) for \(1\le i\le n\)
   #+END_proof

   #+ATTR_LATEX: :options []
   #+BEGIN_theorem
   label:thm2.20
   Let \tau be a modal similarity type, and let \(\fM, \fM'\) be \(\tau\)-models.
   Then, for every \(w\in W\) and \(w'\in W'\), \(w\leftrightarroweq w'\)
   implies that \(w\leftrightsquigarrow w'\). In other words, modal formulas are
   invariant under bisimulation
   #+END_theorem

   #+BEGIN_proof
   Induction on the complexity of \phi.

   Suppose \phi is \(\diamond\psi\), we have \(\fM,w\Vdash\diamond\psi\) iff there
   exists a \(v\) in \(\fM\) s.t. \(Rwv\) and \(\fM,v\Vdash\psi\). As
   \(w\leftrightarroweq w'\), there exists a \(v'\) in \(\fM'\) s.t. \(R'w'v'\)
   and \(v\leftrightarroweq v'\). By the I.H., \(\fM',v'\Vdash\psi\), hence \(\fM',w'\Vdash\diamond\psi\)
   #+END_proof

   #+ATTR_LATEX: :options [Bisimulation and First-Order Logic]
   #+BEGIN_examplle
   label:example2.22

    [[/media/wu/file/stuuudy/notes/images/ModalLogic/BisimilarModels.png]]


   #+END_examplle

   #+ATTR_LATEX: :options []
   #+BEGIN_examplle
   label:example2.23

   [[/media/wu/file/stuuudy/notes/images/ModalLogic/NotBisimilar.png]]
   #+END_examplle

   \(\fM\) is *image-finite* if for each state \(u\) in \(\fM\) and each relation
   \(R\) in \(\fM\), the set \(\{(v_1,\dots,v_n)\mid Ruv_1\dots v_n\}\) is
   finite

   #+ATTR_LATEX: :options [Hennessy-Milner Theorem]
   #+BEGIN_theorem
   label:thm2.24
   Let \tau be a modal similarity type and let \(\fM\) and \(\fM'\) be two
   image-finite \(\tau\)-models. Then for every \(w\in W\) and \(w'\in W'\),
   \(w\leftrightarroweq w'\) iff \(w\leftrightsquigarrow w'\)
   #+END_theorem

   #+BEGIN_proof
   Assume that our similarity type \tau only contains a single diamond. The
   direction from left to right follows from Theorem ref:thm2.20

   Suppose \(w\leftrightsquigarrow w'\). The first condition is immediate. If
   \(Rwv\), assume there is no \(v'\) in \(\fM'\) with \(R'w'v'\) and
   \(v\leftrightsquigarrow v'\). Let \(S'=\{u'\mid R'w'u'\}\). Note that \(S'\)
   must be non-empty, for otherwise \(\fM',w'\Vdash\Box\bot\), which would
   contradict \(w\leftrightsquigarrow w'\) since \(\fM,w\Vdash\diamond\top\).
   Furthermore, as \(\fM'\) is image-finite, \(S'\) must be finite, say
   \(S'=\{w_1',\dots,w_n'\}\). By assumption, for every \(w_i'\in S'\) there
   exists a formula \(\psi_i\) s.t. \(\fM,v\Vdash\psi_i\), but
   \(\fM',w_i'\not\Vdash\psi_i\). It follows that
   \begin{equation*}
   \fM,w\Vdash\diamond(\psi_1\wedge\dots\wedge\psi_n)\quad\text{ and }\quad
   \fM',w'\not\Vdash\diamond(\psi_1\wedge\dots\wedge \psi_n)
   \end{equation*}
   #+END_proof

   #+BEGIN_exercise
   label:ex2.2.8
   Suppose that \(\{Z_i\mid i\in I\}\) is a non-empty collection of
   bisimulations between \(\fM\) and \(\fM'\). Prove that the relation
   \(\bigcup_{i\in I}Z_i\) is also a bisimulation between \(\fM\) and \(\fM'\).
   Conclude that if \(\fM\) and \(\fM'\) are bisimilar, then there is a maximal
   bisimulation between \(\fM\) and \(\fM'\).
   #+END_exercise

   #+BEGIN_proof
   1. If \((w,w')\in\bigcup_{i\in I}Z_i\), then \((w,w')\in Z_j\) for some
      \(j\in I\) and hence they satisfy the same propositional letters
   2. If \((w,w')\in\bigcup_{i\in I}Z_i\) and \(R_{\triangle}wv_1\dots v_n\),
      since \((w,w')\in Z_j\) for some \(j\in I\), we have
      \(R'_{\triangle}w'v_1'\dots v_n'\) and \(v_iZ_jv_i'\) for all \(1\le i\le
      n\), which means \((v_i,v_i')\in\bigcup_{i\in I}Z_i\) for all \(1\le i\le n\)
   3. similarly
   #+END_proof

   #+ATTR_LATEX: :options [Bisimulations for the Basic Temporal Language and Arrow Logic]
   #+BEGIN_remark
   When working with the basic temporal language, we usually work with models
   \((W,R,V)\) and implicitly take \(R_p\) to be \(R^\smallsmile\). Thus we need
   a notion of bisimulation between models \((W,R,V)\) and \((W',R',V')\) to be
   a relation \(Z\) between the states of the two models that satisfies the
   clauses of Definition ref:def2.16, and in addition the following
   4. [@4] If \(wZw'\) and \(Rvw\), then there exists \(v'\) in \(\fM'\) s.t.
      \(vZv'\) and \(R'v'w'\)
   5. Converse of 4: if \(wZw'\) and \(R'v'w'\), then there exists \(v\) in
      \(\fM\) s.t. \(vZv'\)
   #+END_remark

** Finite Models
   #+ATTR_LATEX: :options [Finite Model Property]
   #+BEGIN_definition
   Let \tau be a modal similarity type, and let \(\sfM\) be a class of
   \(\tau\)-models. We say that \tau has the *finite model property w.r.t.* \(\sfM\)
   if the following holds: if \phi is a formula of similarity type \tau, and \phi is
   satisfiable in some model in \(\sfM\), then \phi is satisfiable in a *finite*
   model in \(\sfM\)
   #+END_definition
*** Selecting a finite submodel
    #+ATTR_LATEX: :options [Degree]
    #+BEGIN_definition
    We define the *degree* of modal formulas as follows:
    \begin{align*}
    \deg(p)\quad&=\quad 0\\
    \deg(\bot)\quad&=\quad0\\
    \deg(\neg\phi)\quad&=\quad\deg(\phi)\\
    \deg(\phi\vee\psi)\quad&=\quad\max\{\deg(\phi),\deg(\psi)\}\\
    \deg(\triangle(\phi_1,\dots,\phi_n))\quad&=\quad
    1+\max\{\deg(\phi_1),\dots,\deg(\phi_2)\}
    \end{align*}
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    label:prop2.29
    Let \tau be a finite modal similarity type, and assume our collection of
    proposition letters is finite as well
    1. for all \(n\), up to logical equivalence there are only finitely many
       formulas of degree at most \(n\)
    2. for all \(n\), and every \(\tau\)-model \(\fM\) and state \(w\) of
       \(\fM\), the set of all \(\tau\)-formulas of degree at most \(n\) that
       are satisfied by \(w\), is equivalent to a single formula
    #+END_proposition

    #+ATTR_LATEX: :options [$n$-Bisimulation]
    #+BEGIN_definition
    Let \(\fM\) and \(\fM'\) be models, and let \(w\) and \(w'\) be states of
    \(\fM\) and \(\fM'\), respectively. We say that \(w\) and \(w'\) are
    *\(n\)-bisimilar* (\(w\leftrightarroweq_nw'\)) if there exists a sequence of
    binary relations \(Z_n\subseteq\cdots\subseteq Z_0\) with the following
    properties (for \(i+1\le n\))
    1. \(wZ_nw'\)
    2. if \(vZ_0v'\) then \(v\) and \(v'\) agree on all proposition letters
    3. if \(vZ_{i+1}v'\) and \(Rvu\) then there exists \(u'\) with \(R'v'u'\)
       and \(uZ_iu'\)
    4. if \(vZ_{i+1}v'\) and \(R'v'u'\), then there exists \(u\) with \(Rvu\)
       and \(uZ_iu'\)
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    label:prop2.31
    Let \tau be a finite modal similarity type, \Phi a finite set of proposition
    letters, and let \(\fM\) and \(\fM'\) be models for this language. Then for
    every \(w\) in \(\fM\) and \(w'\) in \(\fM'\), the following are equivalent
    1. \(w\leftrightarroweq_nw'\)
    2. \(w\) and \(w'\) agree on all modal formulas of degree at most \(n\).
    #+END_proposition

    #+BEGIN_proof
    \(2\to 1\). if \(n=0\), obvious.

    If \(n=k\) and the proposition holds. Now suppose \(n=k+1\). Now \(w\) and
    \(w'\) agree on all modal formulas of degree at most \(n+1\). If
    there is not \(v,v'\) s.t. \(v\) and \(v'\) agree on all modal formulas of
    degree at most \(n\) and \(Rwv\) and \(Rwv'\). Let \(S'=\{u'\mid R'w'u'\}\)
    and \(S'\) is finite, say \(S'==\{w_1',\dots,w_n'\}\). By assumption, for
    every \(w_i'\in S'\) there exists a formula \(\psi_i\)  of degree at most
    \(n\) s.t. \(\fM,v\Vdash\psi_i\) but \(\fM',w_i'\not\Vdash\psi_i\). It
    follows that
    \begin{equation*}
    \fM,w\Vdash\diamond(\psi_1\wedge\dots\wedge\psi_n)
    \text{ and }
    \fM',w'\not\Vdash\diamond(\psi_1\wedge\dots\wedge\psi_n)
    \end{equation*}
    #+END_proof

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    Let \tau be a modal similarity type containing only diamonds. Let
    \(\fM=(W,R_1,\dots,R_n,\dots,V)\) be a rooted \(\tau\)-model with root
    \(w\). The notion of the *height* of states in \(\fM\) is defined by
    induction.

    The only element of height 0 is the rot of the model; the states of height
    \(n+1\) are those immediate successors of elements of height \(n\) that have
    not yet assigned a height smaller than \(n+1\). The *height of a model* \(\fM\)
    is the maximum \(n\) s.t. there is a state of height \(n\) in \(\fM\), if
    such a maximum exists; otherwise the height of \(\fM\) is infinite

    For a natural number \(k\), the *restriction* of \(\fM\) to \(k\)
    (\(\fM\restriction k\)) is defined as the submodel containing only states
    whose height is at most \(k\). \((\fM\restriction
    k)=(W_k,R_{1k},\dots,R_{nk},\dots,V_k)\), where
    \(W_k=\{v\mid\text{height}(v)\le k\}\), \(R_{nk}=R_n\cap(W_k\times W_k)\),
    and for each \(p\), \(V_k(p)=V(p)\cap W_k\)
    #+END_definition


    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    label:lemma2.33
    Let \tau be a modal similarity type that contains only diamonds. Let \(\fM\) be
    a rooted \(\tau\)-models, and let \(k\) be a natural number. Then for every
    state \(w\) of \((\fM\restriction k)\), we have \((\fM\restriction
    k),w\leftrightarroweq_l\fM,w\), where \(l=k-\text{height}(w)\)
    #+END_lemma

    #+ATTR_LATEX: :options [Finite Model Property - via Selection]
    #+BEGIN_theorem
    Let \tau be a modal similarity type containing only diamonds, and let \phi be a
    \(\tau\)-formula. If \phi is satisfiable, then it is satisfiable on a finite model
    #+END_theorem

    #+BEGIN_proof
    Fix a modal formula \phi with \(\deg(\phi)=k\). We restrict our modal similarity
    type \tau and our collection of proposition letters to the modal operators and
    proposition letters actually occurring in \phi. Let \(\fM_1,w_1\) be s.t.
    \(\fM_1,w_1\Vdash\phi\). By Proposition ref:prop2.15, there exists a
    tree-like model \(\fM_2\) with root \(w_2\) s.t. \(\fM_2,w_2\Vdash\phi\).
    Let \(\fM_3:=(\fM_2\restriction k)\). By Lemma ref:lemma2.33 we have
    \(\fM_2,w_2\leftrightarroweq_k\fM_3,w_2\) and by Proposition ref:prop2.31 it
    follows that \(\fM_3,w_2\Vdash\phi\)

    By induction on \(n\le k\) we define finite sets of states \(S_0,\dots,S_k\)
    and a (final) model \(\fM_4\) with domain \(S_0\cup\cdots\cup S_k\); the
    points in each \(S_n\) will have height \(n\)

    Define \(S_0\) to be the singleton \(\{w_2\}\). Next, assume that
    \(S_0,\dots,S_n\) have already been defined. Fix an element \(v\) of
    \(S_n\). By Proposition ref:prop2.29 there are only finitely many
    non-equivalent modal formulas whose degree is at most \(k-n\), say
    \(\psi_1,\dots,\psi_m\). For each formula that is of the form \(\la
    a\ra\chi\) and holds in \(\fM_3\) at \(v\), select a state \(u\) from
    \(\fM_3\) s.t. \(R_avu\) and \(\fM_3,u\Vdash\chi\). Add all these \(u\)s to
    \(S_{n+1}\), and repeat this selection process for every state in \(S_n\).
    \(S_{n+1}\) is defined as the set of all points that have been selected in
    this way

    Finally, define \(\fM_4\) as follows. Its domain is \(S_0\cup\dots\cup
    S_k\); as each \(S_i\) is finite, \(\fM_4\) is finite. The relations and
    valuation are obtained by restricting the relations and valuations of
    \(\fM_3\) to the domain of \(\fM_4\)
    #+END_proof
*** Finite models via filtrations

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A set of formulas \Sigma is *closed under subformulas* (or *subformula closed*) if
    for all formulas \phi, \(\phi'\): if \(\phi\vee\phi'\in\Sigma\) then so are
    \(\phi\) and \(\phi'\); if \(\neg\phi\in\Sigma\) then so is \phi; and if
    \(\triangle(\phi_1,\dots,\phi_n)\in\Sigma\) then so are \(\phi_1,\dots,\phi_n\)
    #+END_definition

    #+ATTR_LATEX: :options [Filtrations]
    #+BEGIN_definition
    We work in the basic modal language. Let \(\fM=(W,R,V)\) be a model and \Sigma a
    subformula closed set of formulas. Let \(\leftrightsquigarrow_\Sigma\) be
    the relation on the states of \(\fM\) defined by
    \begin{equation*}
    w\leftrightsquigarrow_\Sigma v \text{ iff for all }\phi\in\Sigma:
    (\fM,w\Vdash\phi\text{ iff }\fM,v\Vdash\phi)
    \end{equation*}
    Note that \(\leftrightsquigarrow_\Sigma\) is an equivalence relation. We
    denote the equivalence class of a state \(w\) of \(\fM\) w.r.t.
    \(\leftrightsquigarrow_\Sigma\) by \(\abs{w}_\Sigma\), or simply
    \(\abs{w}\). The mapping \(w\mapsto\abs{w}\) is called the *natural map*

    Let \(W_\Sigma=\{\abs{w}_\Sigma\mid w\in W\}\). Suppose \(\fM_\Sigma^f\) is
    any model \((W^f,R^f,V^f)\) s.t.
    1. \(W^f=W_\Sigma\)
    2. if \(Rwv\) then \(R^f\abs{w}\abs{v}\)
    3. if \(R^f\abs{w}\abs{v}\) then for all \(\diamond\phi\in\Sigma\), if
       \(\fM,v\Vdash\phi\) then \(\fM,w\Vdash\diamond\phi\)
    4. \(V^f(p)=\{\abs{w}\mid\fM,w\Vdash p\}\), for all proposition letters
       \(p\) in \Sigma


    \(\fM_\Sigma^f\) is called a *filtration of \(fM\) through* \Sigma; we will
    often suppress subscripts and write \(\fM^f\) instead of \(\fM_\Sigma^f\)
    #+END_definition
    label:def2.36
    #+ATTR_LATEX: :width 6cm
    [[/media/wu/file/stuuudy/notes/images/ModalLogic/Filtration.png]]

    Let \(\fM=(\N,R,V)\) , where \(R=\{(0,1),(0,2),(1,3)\}\cup\{(n,n+1)\mid
    n\ge2\}\), and \(V\) has \(V(p)=\N\setminus\{0\}\) and \(V(q)=\{2\}\)

    Further assume \(\Sigma=\{\diamond p,p\}\). \Sigma is subformula closed. Then,
    the model
    \(\fN=(\{\abs{0},\abs{1}\},\{(\abs{0},\abs{1}),(\abs{1},\abs{1})\},V')\),
    where \(V'(p)=\{\abs{1}\}\) is a filtration of \(\fM\) through \Sigma. \(\fN\) is
    not a bounded morphic image of \(\fM\): any bounded morphism would have to
    preserve the formula \(q\)

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    Let \Sigma be a finite subformula closed set of basic modal formulas. For any
    model \(\fM\), if \(\fM^f\) is a filtration of \(\fM\) through a subformula
    closed set \Sigma, then \(\fM^f\) contains at most \(2^n\) nodes (where \(n\)
    denotes the size of \Sigma)
    #+END_proposition

    #+BEGIN_proof
    The states of \(\fM^f\) are the equivalence classes in \(W_\Sigma\). Let
    \(g\) be the function with domain \(W_\Sigma\) and range \(\calp(\Sigma)\)
    defined by \(g(\abs{w})=\{\phi\in\Sigma\mid\fM,w\Vdash\phi\}\). It follows
    from the definition of \(\leftrightsquigarrow_\Sigma\) that \(g\) is well
    defined and injective. Thus \(\abs{W_\Sigma}\le 2^n,n=\abs{\Sigma}\)
    #+END_proof

    #+ATTR_LATEX: :options [Filtration Theorem]
    #+BEGIN_theorem
    Consider the basic modal language. Let \(\fM^f=(W_\Sigma,R^f,V^f)\) be a
    filtration of \(\fM\) through a subformula closed set \Sigma. Then for all
    formulas \(\phi\in\Sigma\), and all nodes \(w\) in \(\fM\), we have
    \(\fM,w\Vdash\phi\) iff \(\fM^f,\abs{w}\Vdash\phi\)
    #+END_theorem

    #+BEGIN_proof
    Suppose \(\diamond\phi\in\Sigma\) and \(\fM,w\Vdash\diamond\phi\). Then there
    is a \(v\) s.t. \(Rwv\) and \(\fM,v\Vdash\phi\). As \(\fM^f\) is a
    filtration, \(R^f\abs{w}\abs{v}\). As \Sigma is a subformula closed,
    \(\phi\in\Sigma\), thus by the inductive hypothesis
    \(\fM^f,\abs{v}\Vdash\phi\). Hence \(\fM^f,\abs\Vdash\diamond\phi\)

    Suppose \(\diamond\phi\in\Sigma\) and \(\fM^f,\abs{w}\Vdash\diamond\phi\).
    Thus there is a state \(\abs{v}\) in \(\fM^f\) s.t. \(R^f\abs{w}\abs{v}\)
    and \(\fM^f,\abs{v}\Vdash\phi\). As \(\phi\in\Sigma\), we have
    \(\fM,v\Vdash\phi\). By the definition, we have \(\fM,w\Vdash\diamond\phi\)
    #+END_proof

    Note that clauses 2 and 3 of Definition ref:def2.36 are designed to make the
    modal case of the inductive step go through.

    Define
    1. \(R^s\abs{w}\abs{v}\) iff \(\exists w'\in\abs{w}\exists v'\in\abs{v}Rw'v'\)
    2. \(R^l\abs{w}\abs{v}\) iff for all formulas \(\diamond\phi\in\Sigma\):
       \(\fM,v\Vdash\phi\) implies \(\fM,w\Vdash\diamond\phi\)


    These relations give rise to the *smallest* and *largest* filtrations respectively

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    Consider the basic modal language. Let \(\fM\) be any model, \Sigma any
    subformula closed set of formulas, \(W_\Sigma\) the set of equivalence
    classes induced by \(\leftrightsquigarrow_\Sigma\), and \(V^f\) the standard
    valuation on \(W_\Sigma\). Then both \((W_\Sigma,R^s,V^f)\) and
    \((W_\Sigma,R^l,V^f)\) are filtrations of \(\fM\) through \Sigma. Furthermore, if
    \((W_\Sigma, R^f,V^f)\) is any filtration of \(\fM\) through \Sigma, then
    \(R^s\subseteq R^f\subseteq R^l\)
    #+END_lemma

    #+BEGIN_proof
    If \(Rwv\), if \(\fM,v\Vdash\phi\), then \(\fM,w\Vdash\diamond\phi\), hence
    \(R^l\abs{w}\abs{v}\)

    For any \((W_\Sigma,R^f,V^f)\). \(R^s\subseteq R^f\) by clause 2.
    \(R^f\subseteq R^l\) by clause 2
    #+END_proof

    #+ATTR_LATEX: :options [Finite Model Property - via Filtrations]
    #+BEGIN_theorem
    Let \phi be a basic modal formula. if \phi is satisfiable, then it is satisfiable
    on a finite model. Indeed, it is satisfiable on a finite model containing at
    most \(2^m\) nodes, where \(m\) is the number of subformulas of \phi
    #+END_theorem

    #+BEGIN_proof
    Assume that \phi is satisfiable on a model \(\fM\); take any filtration of
    \(\fM\) through the set of subformulas .
    #+END_proof

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    Let \(\fM\) be a model, \Sigma a subformula closed set of formulas, and
    \(W_\Sigma\) the set of equivalence classes induced on \(\fM\) by
    \(\leftrightsquigarrow_\Sigma\). Let \(R^t\) be the binary relation on
    \(W_\Sigma\) defined by
    \begin{equation*}
    R^t\abs{w}\abs{v} \text{ iff for all }\phi, \text{ if }\diamond\phi\in\Sigma
    \text{ and }\fM,v\Vdash\phi\vee\diamond\phi\text{ then }\fM,w\Vdash\diamond\phi
    \end{equation*}
    If \(R\) is transitive then \((W_\Sigma,R^t,V^f)\) is a filtration and
    \(R^t\) is transitive
    #+END_lemma

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    Let \((W,R,V)\) be a transitive frame. A *cluster* on \((W,R,V)\) is a
    maximal, nonempty equivalence class under \(R\). That is, \(C\subseteq W\)
    is a cluster if the restriction of \(R\) to \(C\) is an equivalence relation

    A cluster is *simple* if it consists of a single reflexive point, and *proper*
    if it consists more than one point
    #+END_definition
** The Standard Translation
   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   For \tau a modal similarity type and \Phi a collection of proposition letters, let
   \(\call_\tau^1(\Phi)\) be the first-order language (with equality) which has
   unary predicates \(P_0,P_1,\dots\) corresponding to the proposition letters
   \(p_0,p_1,\dots\) in \Phi, and an \((n+1)\)-ary relation symbol \(R_\triangle\)
   for each (\(n\)-ary) modal operator \(\triangle\) in our similarity type. We
   write \(\alpha(x)\) to denote a first-order formula \alpha with one free variable, \(x\)
   #+END_definition

   #+ATTR_LATEX: :options [Standard Translation]
   #+BEGIN_definition
   Let \(x\) be a first-order variable. The *standard translation* \(ST_x\) taking
   modal formulas to first-order formulas in \(\call_\tau^1(\Phi)\) is defined as
   \begin{align*}
   ST_x(p)&\quad\text{=}\quad Px\\
   ST_x(\bot)&\quad\text{=}\quad x\neq x\\
   ST_x(\neg\phi)&\quad\text{=}\quad \neg ST_x(\phi)\\
   ST_x(\phi\vee\psi)&\quad\text{=}\quad ST_x(\phi)\vee ST_x(\psi)\\
   ST_x(\triangle(\phi_1,\dots,\phi_n))&\quad\text{=}\quad \exists y_1\dots
   \exists y_n(R_{\triangle} xy_1\dots y_n\wedge\\
   &\hspace{2cm}ST_{y_1}(\phi_1)\wedge\dots\wedge ST_{y_n}(\phi_n) )
   \end{align*}
   where \(y_1,\dots,y_n\) are fresh variables.
   #+END_definition

   \begin{gather*}
   ST_x(\diamond\phi)=\exists y(Rxy\wedge ST_y(\phi))\\
   ST_x(\box\phi)=\forall y(Rxy\to ST_y(\phi))
   \end{gather*}

   #+ATTR_LATEX: :options [Local and Global Correspondence on Models]
   #+BEGIN_proposition
   Fix a modal similarity type \tau, and let \phi be a \(\tau\)-formula. Then
   1. For all \(\fM\) and all states \(w\) of \(\fM\): \(\fM,w\Vdash \phi\) iff
      \(\fM\models ST_x(\phi)[w]\)
   2. For all \(\fM\): \(\fM\Vdash\phi\) iff \(\fM\models\forall x ST_x(\phi)\)
   #+END_proposition

   #+ATTR_LATEX: :options []
   #+BEGIN_proposition
   1. Let \tau be a modal similarity type that only contains diamonds. Then, every
      \(\tau\)-formula \phi is equivalent to a first-order formula containing at
      most two variables
   2. If \tau does not contain modal operators \(\triangle\) whose arity exceeds
      \(n\), all \(\tau\)-formulas are equivalent to first-order formulas
      containing at most \((n+1)\) vairables
   #+END_proposition

   #+BEGIN_proof
   Assume \tau contains only diamonds \(\la a\ra,\la b\ra\). Fix two distinct
   variables \(x\) and \(y\). Define two variants \(ST_x\) and \(ST_y\) of the
   standard translation as follows
   \begin{alignat*}{2}
   &ST_x(p)=Px&&ST_y(p)=Py\\
   &ST_x(\bot)=x\neq x\quad&&ST_y(\bot)=y\neq y\\
   &ST_x(\neg\phi)=\neg ST_x(\phi)&&ST_y(\neg\phi)=\neg ST_y(\phi)\\
   &ST_x(\phi\vee\psi)=ST_x(\phi)\vee ST_x(\psi)&&ST_y(\phi\vee\psi)=ST_y(\phi)\vee ST_y(\psi)\\
   &ST_x(\la a\ra\phi)=\exists y(R_axy\wedge ST_y(\phi))\quad&&
   ST_y(\la a\ra\phi)=\exists x(R_ayx\wedge ST_x(\phi))
   \end{alignat*}
   Then for any \(\tau\)-formula \phi, its \(ST_x\)-translation contains at most
   the two variables \(x\) and \(y\), and \(ST_x(\phi)\) is equivalent to the
   original standard translation of \phi
   #+END_proof

   #+ATTR_LATEX: :options []
   #+BEGIN_examplle
   \begin{align*}
   ST_x(\diamond(\box p\to q))&=
   \exists y(Rxy\wedge ST_y(\box p\to q))\\
   &=\exists y(Rxy\wedge(\forall x(Ryx\to ST_x(p))\to Qy))\\
   &=\exists y(Rxy\wedge(\forall x(Ryx\to Px)\to Qy))
   \end{align*}
   #+END_examplle

   \(Rxx\) is not equivalent to any modal formula. Suppose \phi is a modal formula
   s.t. \(ST_x(\phi)\) is equivalent to \(Rxx\). Let \(\fM\) be a singleton
   reflexive model and let \(w\) be the unique state in \(\fM\); obviously
   \(\fM\models Rxx[w]\). Let \(\fN\) be a model based on the strict ordering of
   the integers; for every integer \(v\), \(\fN\models\neg Rxx[v]\). Let \(Z\)
   be the relation which links every integer with the unique state in \(fM\),
   and assume that the valuations in \(\fN\) and \(\fM\) are s.t. \(Z\) is a
   bisimulation.
   \begin{equation*}
   \fM\models Rxx[w]\Rightarrow\fM,w\Vdash\phi\Rightarrow\fN,v\Vdash\phi
   \Rightarrow\fN\models Rxx[v]
   \end{equation*}

   #+ATTR_LATEX: :options []
   #+BEGIN_definition
   Let \tau be a modal similarity type, \(\sfC\) a class of \(\tau\)-models, and \Gamma
   a set of formulas over \tau. We say that \Gamma *defines* of *characterizes* a class
   \(\sfK\) of models *within* \(\sfC\) if for all models \(\fM\) in \(\sfC\) we
   have that \(\fM\) is in \(\sfK\) iff \(\fM\Vdash\Gamma\). If \(\sfC\) is the
   class of all \(\tau\)-models, we simply say that \Gamma defines or characterizes
   \(\sfK\); we omit brackets whenever \Gamma is a singleton. We say that a formula \phi
   defines a *property* whenever \phi defines the class of models satisfying the property
   #+END_definition
** Modal Saturation via Ultrafilter Extensions

* COMMENT Completion
  definition

  corollary

  lemma

  theorem
